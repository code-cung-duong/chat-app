{"version":3,"sources":["firebase/Config.js","hooks/UseFirestore.js","context/AuthProvider.js","context/AppProvider.js","firebase/Service.js","components/ChatRoom/IMessage .js","components/ChatRoom/Message.js","components/ChatRoom/OutRoom.js","components/ChatRoom/Seen.js","components/ChatRoom/ChatWindow.js","components/ChatRoom/IconsSVG.js","components/ChatRoom/RoomLists.js","components/ChatRoom/UserInfo.js","components/ChatRoom/UserLists.js","components/ChatRoom/SideBar.js","components/ChatRoom/ChatRoom.js","components/Login/Login.js","modals/AddRoom.js","modals/EditRoom.js","modals/InviteMember.js","modals/ListMember.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","require","UseFirestore","collection","condition","useState","documents","setDocuments","useEffect","dataRef","orderBy","compareValue","length","where","fieldName","operator","onSnapshot","snap","docs","map","doc","data","id","AuthContext","React","createContext","AuthProvider","children","user","setUser","isLoading","setIsLoading","history","useHistory","unsub","onAuthStateChanged","displayName","email","uid","phoneNumber","photoURL","countNotify","status","last_changed","push","document","title","Provider","value","style","fontSize","position","top","left","AppContext","AppProvider","isAddRoomVisible","setIsAddRoomVisible","isShowMembersVisible","setIsShowMembersVisible","selectedRoomId","setSelectedRoomId","isInviteMemberVisible","setIsInviteMemberVisible","isEditRoomVisible","setIsEditRoomVisible","isPopup","setIsPopup","useContext","roomCondition","useMemo","rooms","selectedRoom","Array","from","find","room","memberCondition","members","clearState","setInterval","window","location","reload","addDocuments","add","createAt","FieldValue","serverTimestamp","set","generateKeywords","name","split","filter","word","flagArray","result","stringArray","i","findPermutation","k","join","keywords","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","Div1Styled","styled","div","Div3Styled","formatDate","seconds","formattedDate","formatRelative","Date","locale","vi","charAt","toUpperCase","slice","IMessage","text","createdAt","placement","Text","className","Div2Styled","Message","size","src","marginLeft","OutRoom","handleOutRoom","useCallback","update","u","onConfirm","okText","cancelText","Item","icon","LogoutOutlined","AvatarStyled","span","DivStyled","Seen","users","item","timeSeen","margin","HeaderStyled","ButtonGroupStyled","WrapperStyled","ContentStyled","FormStyled","Form","MessageListStyled","ChatWindow","inputValue","setInputValue","useForm","form1","inputRef","useRef","isLoadingMes","setIsLoadingMes","messageListRef","tab","setTab","messagesCondition","messages","current","focus","get","then","userSeen","m","includes","userRef","isOfflineForFirestore","isOnlineForFirestore","isAwayForFirestore","database","ref","on","snapshot","val","undefined","onDisconnect","addEventListener","abc","visibilityState","delay","oldData","roomId","useLayoutEffect","scrollTop","scrollHeight","getElementsByClassName","play","all","last","a","Notification","tag","renotify","body","onshow","setTimeout","close","handleOnSubmit","trim","setFieldsValue","message","handleOnChange","e","target","menu","onClick","HomeOutlined","FormOutlined","UserOutlined","UsergroupAddOutlined","description","Button","bordered","SettingOutlined","overlay","Loading3QuartersOutlined","spin","color","ms","ds","form","onChange","onPressEnter","placeholder","autoComplete","width","SendOutlined","height","border","HeartSvg","t","viewBox","version","xmlns","p-id","d","OnlineSVG","fill","OfflineSVG","Panel","Collapse","PanelStyled","LinkStyled","Typography","Link","CollapseStyled","RoomLists","roomLists","setRoomsLists","cde","defaultActiveKey","ghost","header","textShadow","backgroundColor","transition","Icon","component","type","UserInfoStyled","UserInfo","PoweroffOutlined","signOut","UserLists","formatDistance","addSuffix","replace","photoUrl","SidebarStyled","SideBar","ChatRoom","Title","fbProvider","FacebookAuthProvider","ggProvider","GoogleAuthProvider","Login","handleLoginGoogle","permission","signInWithPopup","additionalUserInfo","isNewUser","providerId","toLowerCase","alert","requestPermission","justify","textAlign","level","GoogleOutlined","FacebookFilled","marginTop","AddRoom","visible","onOk","getFieldValue","getFieldsValue","resetFields","info","onCancel","layout","label","autoFocus","rules","required","EditRoom","DebounceSelect","fetchOptions","debounceTimeout","curMembers","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","newOptions","labelInValue","filterOption","onSearch","notFoundContent","opt","Option","fetchUserList","search","limit","console","log","InviteMemberModal","setValue","len","success","destroyOnClose","mode","newValue","ListMember","handleOk","okButtonProps","display","borderRadius","float","EllipsisOutlined","App","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6e071f22.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport 'firebase/firebase-analytics'\r\nimport 'firebase/firebase-auth'\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCT6UcJ1fSROa6XrtINMkdxatAgSt5LU_s\",\r\n  authDomain: \"huong-min-hoho.firebaseapp.com\",\r\n  databaseURL: \"https://huong-min-hoho-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"huong-min-hoho\",\r\n  storageBucket: \"huong-min-hoho.appspot.com\",\r\n  messagingSenderId: \"316009393400\",\r\n  appId: \"1:316009393400:web:78f2cbbdf6477d8b0b5f0d\",\r\n  measurementId: \"G-BGSGYFGCHJ\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\nrequire('firebase/app');\r\n\r\n// if (window.location.hostname === 'localhost') {\r\n//     auth.useEmulator('http://localhost:9099');\r\n//     db.useEmulator('localhost', '8080');\r\n// }\r\n\r\n\r\nexport {\r\n    auth,\r\n    db\r\n};\r\nexport default firebase;\r\n","import {useEffect, useState} from 'react';\r\nimport {db} from '../firebase/Config';\r\n\r\nconst UseFirestore = (collection, condition) => {\r\n    const [documents, setDocuments] = useState([]);\r\n    useEffect(() => {\r\n        let dataRef = db.collection(collection).orderBy('createAt');\r\n        if(collection === 'users'){\r\n            dataRef = db.collection(collection).orderBy('status', 'asc');\r\n        }\r\n        if (condition) {\r\n            if (!condition.compareValue || !condition.compareValue.length) {\r\n                setDocuments([]);\r\n                return;\r\n            }\r\n            dataRef = dataRef.where(condition.fieldName, condition.operator, condition.compareValue);\r\n        }\r\n        const unsubcribe = dataRef.onSnapshot((snap) => {\r\n            const documents = snap.docs.map((doc) => ({\r\n                ...doc.data(),\r\n                id: doc.id\r\n            }));\r\n            setDocuments(documents);\r\n        })\r\n\r\n        return unsubcribe;\r\n    }, [collection, condition])\r\n    return documents;\r\n}\r\nexport default UseFirestore;\r\n","import { Spin } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebase/Config';\r\n\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nfunction AuthProvider({ children }) {\r\n\r\n    const [user, setUser] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const unsub = auth.onAuthStateChanged((user) => {\r\n\r\n            if (user) {\r\n                const {\r\n                    displayName,\r\n                    email,\r\n                    uid,\r\n                    phoneNumber,\r\n                    photoURL,\r\n                    countNotify,\r\n                    status,\r\n                    last_changed,\r\n                } = user;\r\n\r\n                setUser({\r\n                    displayName,\r\n                    email,\r\n                    uid,\r\n                    phoneNumber,\r\n                    photoURL,\r\n                    countNotify,\r\n                    status,\r\n                    last_changed,\r\n                });\r\n                setIsLoading(false);\r\n                history.push(\"/\");\r\n                document.title = \"Fake Messenger\"\r\n                return;\r\n            }\r\n            setUser({});\r\n            setIsLoading(false);\r\n            history.push(\"/login\");\r\n            document.title = \"Fake Messenger - Đăng nhập\"\r\n        });\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, [history]);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={\r\n            { user, setUser }\r\n        }>\r\n            {\r\n                isLoading ? <Spin style={\r\n                    {\r\n                        fontSize: '20pt',\r\n                        position: 'fixed',\r\n                        top: '50%',\r\n                        left: '50%'\r\n                    }\r\n                } /> : children\r\n            } </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthProvider;\r\n","import React, { useContext, useMemo, useState } from 'react';\r\nimport UseFirestore from '../hooks/UseFirestore';\r\nimport { AuthContext } from './AuthProvider';\r\nexport const AppContext = React.createContext();\r\n\r\n\r\nfunction AppProvider({children}) {\r\n\r\n\r\n    const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\r\n    const [isShowMembersVisible, setIsShowMembersVisible] = useState(false);\r\n    const [selectedRoomId, setSelectedRoomId] = useState('');\r\n    const [isInviteMemberVisible, setIsInviteMemberVisible] = useState(false);\r\n    const [isEditRoomVisible, setIsEditRoomVisible] = useState(false);\r\n    const [isPopup, setIsPopup] = useState(true);\r\n\r\n    const {user: {\r\n            uid\r\n        }} = useContext(AuthContext);\r\n\r\n    const roomCondition = useMemo(() => {\r\n        return {fieldName: 'members', operator: 'array-contains', compareValue: uid}\r\n    }, [uid])\r\n\r\n    const rooms = UseFirestore('rooms', roomCondition)\r\n\r\n    const selectedRoom = useMemo(() => Array.from(rooms).find((room) => room.id === selectedRoomId) || {}, [rooms, selectedRoomId]);\r\n\r\n    const memberCondition = useMemo(() => {\r\n        return {fieldName: 'uid', operator: 'in', compareValue: selectedRoom.members};\r\n    }, [selectedRoom.members])\r\n\r\n    const members = UseFirestore('users', memberCondition)\r\n\r\n    const clearState = () => {\r\n        setSelectedRoomId('');\r\n        setIsAddRoomVisible(false);\r\n        setIsInviteMemberVisible(false);\r\n        setInterval(() => {\r\n            window.location.reload();\r\n        }, 50);\r\n        \r\n    };\r\n\r\n    return (\r\n        <AppContext.Provider value={\r\n            {\r\n                rooms,\r\n                isAddRoomVisible,\r\n                setIsAddRoomVisible,\r\n                selectedRoomId,\r\n                setSelectedRoomId,\r\n                selectedRoom,\r\n                members,\r\n                isInviteMemberVisible,\r\n                setIsInviteMemberVisible,\r\n                clearState,\r\n                isShowMembersVisible,\r\n                setIsShowMembersVisible,\r\n                isEditRoomVisible, setIsEditRoomVisible,isPopup, setIsPopup\r\n            }\r\n        }>\r\n            {children} </AppContext.Provider>\r\n    )\r\n}\r\nexport default AppProvider;\r\n","import firebase, {db} from \"./Config\";\r\n\r\n\r\nexport const addDocuments = (collection, data) => {\r\n    const query = db.collection(collection);\r\n\r\n    query.add({\r\n        ...data,\r\n        createAt: firebase.firestore.FieldValue.serverTimestamp()\r\n    })\r\n}\r\n\r\nexport const setDocuments = (collection, data) => {\r\n    const query = db.collection(collection).doc(data.uid);\r\n\r\n    query.set({\r\n        ...data,\r\n        createAt: firebase.firestore.FieldValue.serverTimestamp()\r\n    })\r\n}\r\n\r\n\r\nexport const generateKeywords = (displayName) => {\r\n\r\n    const name = displayName.split(' ').filter((word) => word);\r\n\r\n    const length = name.length;\r\n    let flagArray = [];\r\n    let result = [];\r\n    let stringArray = [];\r\n\r\n    /**\r\n   * khoi tao mang flag false\r\n   * dung de danh dau xem gia tri\r\n   * tai vi tri nay da duoc su dung\r\n   * hay chua\r\n   **/\r\n    for (let i = 0; i < length; i++) {\r\n        flagArray[i] = false;\r\n    }\r\n\r\n    const createKeywords = (name) => {\r\n        const arrName = [];\r\n        let curName = '';\r\n        name.split('').forEach((letter) => {\r\n            curName += letter;\r\n            arrName.push(curName);\r\n        });\r\n        return arrName;\r\n    };\r\n\r\n    function findPermutation(k) {\r\n        for (let i = 0; i < length; i++) {\r\n            if (! flagArray[i]) {\r\n                flagArray[i] = true;\r\n                result[k] = name[i];\r\n\r\n                if (k === length - 1) {\r\n                    stringArray.push(result.join(' '));\r\n                }\r\n\r\n                findPermutation(k + 1);\r\n                flagArray[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    findPermutation(0);\r\n\r\n    const keywords = stringArray.reduce((acc, cur) => {\r\n        const words = createKeywords(cur);\r\n        return [\r\n            ...acc,\r\n            ...words\r\n        ];\r\n    }, []);\r\n    keywords.push(\"*\");\r\n    return keywords;\r\n};\r\n","import { Tooltip, Typography } from 'antd';\r\nimport { formatRelative } from 'date-fns';\r\nimport { vi } from 'date-fns/locale';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Div1Styled = styled.div`\r\n  margin-bottom: 17px;\r\n  margin-left: 9px;\r\n  display: flex;\r\n  width: 99%;\r\n  justify-content:flex-end;\r\n  position: relative;\r\n\r\n  .date {\r\n    margin-left: 10px;\r\n    font-size: 11px;\r\n    color: #a7a7a7;\r\n  }\r\n\r\n  .content {\r\n    overflow-y: visible;\r\n    color: #fff;\r\n    max-width: 400px;\r\n    min-width: 20px;\r\n    word-wrap:break-word;\r\n    font-size: 15px;\r\n    text-align: justify;\r\n  }\r\n\r\n  .ant-tooltip-inner{\r\n      magrin-left: -20px;\r\n  }\r\n\r\n  .ant-avatar{\r\n      margin: 1px;\r\n  }\r\n`;\r\n\r\n\r\nconst Div3Styled = styled.div`\r\n    max-width: 800px;\r\n    background-color: #0099ff;\r\n    border: 1px solid #ddd;\r\n    border-radius: 30px;\r\n    padding: 3px 18px 5px 18px;\r\n    min-width: 40px;\r\n    text-align: justify;\r\n    margin-right : 13px\r\n`;\r\n\r\nfunction formatDate(seconds) {\r\n    let formattedDate = '';\r\n    if (seconds) {\r\n        formattedDate = formatRelative(new Date(seconds * 1000), new Date(), { locale: vi });\r\n        formattedDate = formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n    }\r\n    return formattedDate;\r\n}\r\n\r\n\r\nfunction IMessage({ text, createdAt }) {\r\n    return (\r\n        <Div1Styled>\r\n            <Div3Styled>\r\n                <Tooltip placement=\"left\"\r\n                    title={\r\n                        formatDate(createdAt?.seconds)\r\n                    }>\r\n                    <Typography.Text className='content'>\r\n                        {text}</Typography.Text>\r\n                </Tooltip>\r\n            </Div3Styled>\r\n\r\n        </Div1Styled>\r\n\r\n    );\r\n}\r\n\r\nexport default IMessage;\r\n","import { Tooltip, Typography } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport { formatRelative } from 'date-fns';\r\nimport { vi } from 'date-fns/locale';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Div1Styled = styled.div`\r\n  margin-bottom: 17px;\r\n  margin-left: 5px;\r\n  display: flex;\r\n  width: 900px;\r\n  justify-content:flex-start;\r\n\r\n  .date {\r\n    margin-left: 10px;\r\n    font-size: 11px;\r\n    color: #a7a7a7;\r\n  }\r\n\r\n  .content {  \r\n    overflow-y: visible;\r\n    color: #123;\r\n    max-width: 400px;\r\n    min-width: 20px;\r\n    word-wrap:break-word;\r\n    font-size: 15px;\r\n    text-align: justify;\r\n  }\r\n`;\r\n\r\nconst Div2Styled = styled.div`\r\n  magrin: 5px;\r\n  padding-right: 15px;\r\n`;\r\n\r\nconst Div3Styled = styled.div`\r\n    max-width: 800px;\r\n    background-color: rgb(228 230 235);\r\n    border: 1px solid #ddd;\r\n    border-radius: 30px;\r\n    padding: 3px 18px 5px 18px;\r\n    min-width: 40px;\r\n    text-align: justify;\r\n`;\r\n\r\nfunction formatDate(seconds) {\r\n    let formattedDate = '';\r\n    if (seconds) {\r\n        formattedDate = formatRelative(new Date(seconds * 1000), new Date(), {locale: vi});\r\n        formattedDate = formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n    }\r\n    return formattedDate;\r\n}\r\n\r\n\r\nfunction Message({ text, photoURL, displayName, createdAt }) {\r\n\r\n    return (\r\n        <Div1Styled>\r\n            <Div2Styled>\r\n                <Tooltip title={displayName}\r\n                    placement=\"left\">\r\n                    <Avatar size='default'\r\n                        src={photoURL}>\r\n                        {\r\n                            photoURL ? '' : displayName.charAt(0)\r\n                        } </Avatar>\r\n                </Tooltip>\r\n            </Div2Styled>\r\n            <Div3Styled>\r\n                <Tooltip placement=\"left\" style={{marginLeft: '10px'}}\r\n                    title={\r\n                        formatDate(createdAt?.seconds)\r\n                    }>\r\n                    <Typography.Text className='content'>\r\n                        {text}</Typography.Text>\r\n                </Tooltip>\r\n            </Div3Styled>\r\n        </Div1Styled>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import { LogoutOutlined } from '@ant-design/icons';\r\nimport { Menu, Popconfirm } from 'antd';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport { db } from '../../firebase/Config';\r\n\r\nexport default function OutRoom() {\r\n    const { selectedRoom, selectedRoomId, setSelectedRoomId } = useContext(AppContext);\r\n    const { user: {\r\n        uid\r\n    } } = useContext(AuthContext);\r\n\r\n    const handleOutRoom = useCallback(() => {\r\n        setSelectedRoomId('');\r\n        db.collection('rooms').doc(selectedRoomId).update({\r\n            members: selectedRoom.members.filter((u) => u !== uid)\r\n        })\r\n    }, [selectedRoomId, uid])\r\n\r\n    return (\r\n        <Popconfirm placement=\"left\" title=\"Bạn chắc chắn muốn rời nhóm chứ ?\"\r\n            onConfirm={handleOutRoom}\r\n            okText=\"Có\"\r\n            cancelText=\"Không\">\r\n            <Menu.Item icon={<LogoutOutlined />}\r\n                key=\"4\">Rời khỏi nhóm</Menu.Item>\r\n        </Popconfirm>\r\n    )\r\n}\r\n","import { Tooltip } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport { formatRelative } from 'date-fns';\r\nimport { vi } from 'date-fns/locale';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst AvatarStyled = styled.span `\r\n    font-size: 13px;\r\n    width: 13px;\r\n    line-height: 13px;\r\n    height: 17px;\r\n    user-select: none;\r\n`;\r\n\r\nconst DivStyled = styled.div `\r\n    float: right;\r\n    margin-top: -20px;\r\n\r\n    .ant-avatar-string{\r\n        line-height: 13px;\r\n    }\r\n\r\n\r\n`;\r\n\r\nfunction formatDate(seconds) {\r\n    let formattedDate = '';\r\n    if (seconds) {\r\n        formattedDate = formatRelative(new Date(seconds * 1000), new Date(), { locale: vi });\r\n        //formattedDate = formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n    }\r\n    return formattedDate;\r\n}\r\n\r\nexport default function Seen({users}) {\r\n    return (\r\n        <DivStyled> {\r\n            users.map((item) => (\r\n                <Tooltip key={item.uid} title={item.displayName+' đã xem '+ formatDate(item.timeSeen.seconds)} placement=\"left\">\r\n                    <Avatar src={item.photoURL} style={\r\n                            {margin: '2px'}\r\n                        }\r\n                        size={17}>\r\n                        <AvatarStyled>A</AvatarStyled>\r\n                    </Avatar>\r\n                </Tooltip>\r\n            ))\r\n        } </DivStyled>\r\n    )\r\n}\r\n","import {\r\n    FormOutlined,\r\n    HomeOutlined,\r\n    Loading3QuartersOutlined,\r\n    SendOutlined,\r\n    SettingOutlined,\r\n    UsergroupAddOutlined,\r\n    UserOutlined\r\n} from '@ant-design/icons';\r\nimport {\r\n    Button,\r\n    Dropdown,\r\n    Form,\r\n    Input,\r\n    Menu\r\n} from 'antd';\r\nimport { useForm } from 'antd/lib/form/Form';\r\nimport { delay } from 'lodash';\r\nimport React, {\r\n    useCallback,\r\n    useContext,\r\n    useEffect,\r\n    useLayoutEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState\r\n} from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport firebase, { db } from '../../firebase/Config';\r\nimport { addDocuments } from '../../firebase/Service';\r\nimport UseFirestore from '../../hooks/UseFirestore';\r\nimport IMessage from './IMessage ';\r\nimport Message from './Message';\r\nimport OutRoom from './OutRoom';\r\nimport Seen from './Seen';\r\n\r\n\r\nconst HeaderStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 56px;\r\n  padding: 0 16px;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgb(230, 230, 230);\r\n  box-shadow: -3px 13px 6px -10px rgb(230 230 230);\r\n\r\n  .header {\r\n    &__info {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n    }\r\n\r\n    &__title {\r\n      margin: 0;\r\n      font-weight: bold;\r\n    }\r\n\r\n    &__description {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  .load{\r\n    fontSize: '56px',\r\n    color: '#08c',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%'\r\n  }\r\n\r\n  .settingIcon{\r\n      font-size: '15px';\r\n  }\r\n`;\r\n\r\nconst ButtonGroupStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst WrapperStyled = styled.div`\r\n  height: 100vh;\r\n`;\r\n\r\nconst ContentStyled = styled.div`\r\n  height: calc(100% - 56px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 11px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst FormStyled = styled(Form)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 2px 2px 2px 0;\r\n  border: 1px solid rgb(230, 230, 230);\r\n  border-radius: 2px;\r\n  margin-top: 10px;\r\n\r\n  .ant-form-item {\r\n    flex: 1;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst MessageListStyled = styled.div`\r\n  max-height: 100%;\r\n  overflow-y: auto;\r\n`;\r\n\r\n\r\nfunction ChatWindow() {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [form1] = useForm();\r\n    const {\r\n        selectedRoom,\r\n        selectedRoomId,\r\n        setSelectedRoomId,\r\n        setIsInviteMemberVisible,\r\n        setIsShowMembersVisible,\r\n        setIsEditRoomVisible,\r\n        members\r\n    } = useContext(AppContext);\r\n\r\n    const {\r\n        user: {\r\n            uid,\r\n            displayName,\r\n            photoURL\r\n        }\r\n    } = useContext(AuthContext);\r\n\r\n    const inputRef = useRef(null);\r\n    const [isLoadingMes, setIsLoadingMes] = useState(true);\r\n    const messageListRef = useRef(null);\r\n    const [tab, setTab] = useState('');\r\n\r\n    const messagesCondition = useMemo(() => {\r\n        return { fieldName: 'roomId', operator: '==', compareValue: selectedRoomId };\r\n    }, [selectedRoomId])\r\n\r\n    const messages = UseFirestore('messages', messagesCondition);\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoadingMes(true);\r\n        if (selectedRoomId) {\r\n            inputRef.current.focus();\r\n        }\r\n\r\n\r\n        const un = db.collection('messages').where('roomId', '==', selectedRoomId).get().then((snap) => {\r\n            snap.docs.map((doc) => {\r\n                const data = doc.data().userSeen.map((m) => (m.uid));\r\n                if (!data.includes(uid)) {\r\n                    db.collection('messages').doc(doc.id).update({\r\n                        userSeen: [\r\n                            ...doc.data().userSeen, {\r\n                                uid: uid,\r\n                                displayName: displayName,\r\n                                photoURL: photoURL,\r\n                                timeSeen: new Date()\r\n                            }\r\n                        ]\r\n                    })\r\n                }\r\n\r\n            })\r\n        })\r\n        return un;\r\n    }, [selectedRoomId])\r\n\r\n    const userRef = firebase.firestore().doc('/users/' + uid);\r\n\r\n    var isOfflineForFirestore = useMemo(() => ({ status: 'c', last_changed: firebase.firestore.FieldValue.serverTimestamp() }), []);\r\n\r\n    var isOnlineForFirestore = useMemo(() => ({ status: 'a', last_changed: firebase.firestore.FieldValue.serverTimestamp() }), []);\r\n\r\n    var isAwayForFirestore = useMemo(() => ({ status: 'b', last_changed: firebase.firestore.FieldValue.serverTimestamp() }), []);\r\n\r\n    useEffect(() => {\r\n        const abc = firebase.database().ref('.info/connected').on('value', function (snapshot) {\r\n            if (snapshot?.val() === false && uid !== undefined) {\r\n                userRef?.update(isOfflineForFirestore);\r\n                return;\r\n            };\r\n            // console.log(uid);\r\n            if (uid === undefined && tab === 'visible') { // console.log('set offline');\r\n                userRef?.update(isOfflineForFirestore);\r\n            } else if (uid !== undefined && tab !== 'hidden') { // console.log('set online');\r\n                firebase.database().ref('/status/' + uid)?.onDisconnect().update(isOfflineForFirestore).then(function () {\r\n                    userRef?.update(isOnlineForFirestore);\r\n                });\r\n            }\r\n        });\r\n\r\n        return abc;\r\n\r\n\r\n    }, [uid])\r\n\r\n\r\n    window.addEventListener(\"unload\", () => {\r\n        userRef?.update(isOfflineForFirestore);\r\n    })\r\n\r\n    const abc = useCallback(() => {\r\n        if (uid === undefined) {\r\n            userRef?.update(isOfflineForFirestore);\r\n        } else if (document.visibilityState === 'hidden' && tab !== 'hidden' && uid !== undefined) {\r\n            userRef?.update(isAwayForFirestore);\r\n            setTab('hidden');\r\n        } else if (document.visibilityState === 'visible' && tab !== 'visible' && uid !== undefined) {\r\n            setTab('visible');\r\n            userRef?.update(isOnlineForFirestore);\r\n        }\r\n\r\n        const un = db.collection('messages').where('roomId', '==', selectedRoomId).get().then((snap) => {\r\n            snap.docs.map((doc) => {\r\n                const data = doc.data().userSeen.map((m) => (m.uid));\r\n                if (!data.includes(uid) && document.visibilityState === 'visible') {\r\n                    db.collection('messages').doc(doc.id).update({\r\n                        userSeen: [\r\n                            ...doc.data().userSeen, {\r\n                                uid: uid,\r\n                                displayName: displayName,\r\n                                photoURL: photoURL,\r\n                                timeSeen: new Date()\r\n                            }\r\n                        ]\r\n                    })\r\n                }\r\n\r\n            })\r\n        })\r\n        return un;\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('visibilitychange', abc, false);\r\n    }, [abc])\r\n\r\n\r\n    useEffect(() => {\r\n        delay(() => {\r\n            setIsLoadingMes(false);\r\n        }, 10, '');\r\n\r\n    }, [messages])\r\n\r\n\r\n    useEffect(() => {\r\n        const abc = db.collection('notifys').doc(uid).onSnapshot((snap) => {\r\n            const oldData = snap?.data()?.roomId;\r\n            if (selectedRoomId && oldData !== undefined) {\r\n                db.collection('notifys')?.doc(uid).update({\r\n                    roomId: [...Array.from(oldData).filter((u) => u !== selectedRoomId)]\r\n                })\r\n                // console.log(\"da xem\");\r\n            }\r\n            return abc;\r\n        })\r\n        return abc;\r\n    }, [selectedRoomId])\r\n\r\n    useLayoutEffect(() => {\r\n        if (messageListRef.current) {\r\n            messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\r\n        }\r\n        // console.log(\"layout\");\r\n    })\r\n\r\n    // const users = UseFirestore('users', '');\r\n    const loadMessage = () => {\r\n        const load = messages.map((ms) => {\r\n            return ms.uid === uid ? <div key={\r\n                ms.id\r\n            }>\r\n                <IMessage text={\r\n                    ms.text\r\n                }\r\n                    photoURL={\r\n                        ms.photoURL\r\n                    }\r\n                    displayName={\r\n                        ms.displayName\r\n                    }\r\n                    createdAt={\r\n                        ms.createAt\r\n                    } /> {\r\n                    ms.id === messages[messages.length - 1].id ? <Seen users={\r\n                        ms.userSeen.filter((ds) => ds.uid !== uid)\r\n                    } /> : <></>\r\n                } </div> : <div key={\r\n                    ms.id\r\n                }>\r\n                <Message text={\r\n                    ms.text\r\n                }\r\n                    photoURL={\r\n                        ms.photoURL\r\n                    }\r\n                    displayName={\r\n                        ms.displayName\r\n                    }\r\n                    createdAt={\r\n                        ms.createAt\r\n                    } /> {\r\n                    ms.id === messages[messages.length - 1].id ? <Seen users={\r\n                        ms.userSeen.filter((ds) => ds.uid !== uid)\r\n                    } /> : <></>\r\n                } </div>\r\n\r\n\r\n        })\r\n        return load;\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const abc = db.collection('notifys').doc(uid).onSnapshot((snap) => { // console.log(\"tin nhan moi\");\r\n            const oldData = snap?.data()?.roomId;\r\n            if (document.visibilityState !== 'visible') {\r\n                document.getElementsByClassName(\"audio\")[0]?.play();\r\n            }\r\n            if (oldData != undefined) {\r\n                document.title = oldData.length === 0 ? 'Fake Messenger' : \"(\" + oldData.length + \") Fake Messenger\";\r\n                db.collection('messages').orderBy('createAt').get().then((snap) => {\r\n                    const all = snap.docs.map((doc) => (doc.data()));\r\n                    const last = all[all.length - 1];\r\n                    if (last !== undefined) {\r\n                        var a = new Notification(\"Tin nhắn từ \" + last?.displayName+\"  (Tự đóng sau 5s)\", {\r\n                            tag: \"<h1>\",\r\n                            icon: last.photoURL,\r\n                            renotify: false,\r\n                            body: last?.text\r\n                        })\r\n\r\n                        a.onshow = ()=>{\r\n                            setTimeout(() => {\r\n                                a.close();\r\n                            }, 5000);\r\n                        }\r\n                    }\r\n\r\n\r\n                })\r\n            }\r\n            return abc;\r\n        })\r\n        return abc;\r\n    }, [])\r\n\r\n\r\n    const loadingListMessage = () => (isLoadingMes === true ? <Loading3QuartersOutlined spin\r\n        style={\r\n            {\r\n                fontSize: '56px',\r\n                color: '#08c',\r\n                position: 'absolute',\r\n                top: '45%',\r\n                left: '50%'\r\n            }\r\n        } /> : <MessageListStyled className=\"listMessage\"\r\n            ref={messageListRef}>\r\n        {\r\n            loadMessage()\r\n        } </MessageListStyled>)\r\n\r\n\r\n    const handleOnSubmit = () => {\r\n        if (inputValue.trim().length) {\r\n\r\n            addDocuments('messages', {\r\n                text: inputValue,\r\n                uid,\r\n                photoURL,\r\n                displayName,\r\n                roomId: selectedRoomId,\r\n                userSeen: [\r\n                    {\r\n                        uid: uid,\r\n                        displayName: displayName,\r\n                        photoURL: photoURL,\r\n                        timeSeen: new Date()\r\n                    }\r\n                ]\r\n            });\r\n\r\n\r\n            members?.filter((u) => u.uid !== uid).forEach((user) => {\r\n                db.collection('notifys')?.doc(user.id).get().then((doc) => {\r\n                    db.collection('notifys')?.doc(user.id).update({\r\n                        roomId: [\r\n                            ...doc.data().roomId,\r\n                            selectedRoomId\r\n                        ],\r\n                        createAt: firebase.firestore.FieldValue.serverTimestamp()\r\n                    })\r\n                });\r\n            })\r\n\r\n            form1.setFieldsValue({ message: '' });\r\n            setInputValue('');\r\n            inputRef.current.focus();\r\n        }\r\n    }\r\n\r\n\r\n    const handleOnChange = (e) => {\r\n        if (e.target.value !== '') {\r\n            setInputValue(e.target.value);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const un = db.collection('messages').where('roomId', '==', selectedRoomId).get().then((snap) => {\r\n            snap.docs.map((doc) => {\r\n                const data = doc.data().userSeen.map((m) => (m.uid));\r\n                if (!data.includes(uid) && document.visibilityState === 'visible') {\r\n                    db.collection('messages').doc(doc.id).update({\r\n                        userSeen: [\r\n                            ...doc.data().userSeen, {\r\n                                uid: uid,\r\n                                displayName: displayName,\r\n                                photoURL: photoURL,\r\n                                timeSeen: new Date()\r\n                            }\r\n                        ]\r\n                    })\r\n                }\r\n\r\n            })\r\n        })\r\n        return un;\r\n    }, [messages])\r\n\r\n    const menu = useMemo(() => (\r\n        <Menu>\r\n            <Menu.Item onClick={\r\n                () => setSelectedRoomId('')\r\n            }\r\n                icon={<HomeOutlined />}\r\n                key=\"3\">Trang chủ</Menu.Item>\r\n            <Menu.Item onClick={\r\n                () => setIsEditRoomVisible(true)\r\n            }\r\n                icon={<FormOutlined />}\r\n                key=\"1\">Đổi thông tin nhóm</Menu.Item>\r\n            <Menu.Item onClick={\r\n                () => setIsShowMembersVisible(true)\r\n            }\r\n                icon={<UserOutlined />}\r\n                key=\"1\">Xem thành viên</Menu.Item>\r\n            <Menu.Item onClick={\r\n                () => setIsInviteMemberVisible(true)\r\n            }\r\n                icon={<UsergroupAddOutlined />}\r\n                key=\"2\">Thêm bạn bè</Menu.Item>\r\n\r\n            <OutRoom />\r\n\r\n\r\n        </Menu>\r\n    ), [setIsShowMembersVisible, setIsInviteMemberVisible, setSelectedRoomId]);\r\n\r\n    const noSelectRoom = () => (\r\n\r\n\r\n        <iframe style={\r\n            {\r\n                width: '100%',\r\n                height: '100%',\r\n                bordered: 'none',\r\n                border: '0'\r\n\r\n            }\r\n        }\r\n            src=\"https://cuberun.adamkarlsten.com/\"\r\n            title=\"Chào bạn Hương Min nhé 🥰\"></iframe>\r\n    )\r\n\r\n    const sendForm = () => (\r\n        <FormStyled form={form1}>\r\n            <Form.Item name='message'>\r\n                <Input ref={inputRef}\r\n                    onChange={handleOnChange}\r\n                    onPressEnter={handleOnSubmit}\r\n                    placeholder='Aa...'\r\n                    bordered={false}\r\n                    autoComplete='off' />\r\n            </Form.Item>\r\n            <Button style={\r\n                {\r\n                    width: '40px',\r\n                    color: 'blue'\r\n                }\r\n            }\r\n                icon={\r\n                    <SendOutlined\r\n                        className=\"settingIcon\" />\r\n                }\r\n                onClick={handleOnSubmit}></Button>\r\n        </FormStyled>\r\n    )\r\n\r\n    const mainLayout = () => (\r\n        <WrapperStyled>\r\n            <HeaderStyled>\r\n                <div className='header__info'>\r\n                    <p className='header__title'>\r\n                        {\r\n                            !selectedRoom ? '' : selectedRoom.name\r\n                        }</p>\r\n                    <span className='header__description'>\r\n                        {\r\n                            !selectedRoom ? '' : selectedRoom.description\r\n                        }</span>\r\n                </div>\r\n                <ButtonGroupStyled>\r\n                    <Dropdown.Button style={\r\n                        { bordered: 'none' }\r\n                    }\r\n                        icon={<SettingOutlined />}\r\n                        overlay={menu}></Dropdown.Button>\r\n                </ButtonGroupStyled>\r\n            </HeaderStyled>\r\n\r\n            <ContentStyled> {\r\n                loadingListMessage()\r\n            }\r\n\r\n                {\r\n                    sendForm()\r\n                } </ContentStyled>\r\n        </WrapperStyled>\r\n    )\r\n\r\n\r\n    return (\r\n        <>\r\n            <ReactAudioPlayer src=\"mess.mp3\" className=\"audio\" /> {\r\n                selectedRoomId ? <>{\r\n                    mainLayout()\r\n                }</> : <>{\r\n                    noSelectRoom()\r\n                }</>\r\n            }</>\r\n    )\r\n}\r\nexport default ChatWindow;\r\n","const HeartSvg = () => (\r\n    <svg t=\"1625646209821\" className=\"icon\" viewBox=\"0 0 1027 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5566\" width=\"30\" height=\"30\">\r\n        <path d=\"M400.695652 545.391304a2 2 0 1 0 89.043478 0 2 2 0 1 0-89.043478 0Z\" p-id=\"5567\"></path>\r\n        <path d=\"M222.608696 545.391304a2 2 0 1 0 89.043478 0 2 2 0 1 0-89.043478 0Z\" p-id=\"5568\"></path>\r\n        <path d=\"M581.008696 545.391304a2 2 0 1 0 89.043478 0 2 2 0 1 0-89.043478 0Z\" p-id=\"5569\"></path>\r\n        <path d=\"M447.443478 115.756522C200.347826 115.756522 0 296.069565 0 518.678261c0 140.243478 80.13913 264.904348 200.347826 336.13913l0 162.504348 153.6-104.626087c28.93913 6.678261 60.104348 8.904348 91.269565 8.904348 247.095652 0 447.443478-180.313043 447.443478-402.921739S692.313043 115.756522 447.443478 115.756522zM447.443478 877.078261c-11.130435 0-22.26087 0-33.391304-2.226087 0 0-2.226087 0-2.226087 0l0 0c-22.26087-2.226087-42.295652-4.452174-62.330435-8.904348l0 0c0 0 0 0 0 0 0 0 0 0 0 0l-46.747826 33.391304c0 0 0 0 0 0l-53.426087 37.843478 0 0 0 0 0-55.652174 0-4.452174c0 0 0 0 0 0l0-48.973913c0 0 0 0 0 0 0 0 0 0 0 0l0 0c-15.582609-8.904348-31.165217-17.808696-44.521739-26.713043l0 0C200.347826 801.391304 200.347826 801.391304 198.121739 801.391304c-8.904348-6.678261-17.808696-13.356522-26.713043-22.26087-2.226087-2.226087-2.226087-2.226087-4.452174-4.452174-4.452174-2.226087-6.678261-6.678261-11.130435-11.130435-2.226087-2.226087-4.452174-4.452174-4.452174-4.452174-4.452174-4.452174-6.678261-6.678261-11.130435-11.130435-2.226087-2.226087-4.452174-4.452174-4.452174-6.678261-2.226087-4.452174-6.678261-6.678261-8.904348-11.130435-2.226087-2.226087-4.452174-4.452174-4.452174-6.678261-2.226087-4.452174-6.678261-6.678261-8.904348-11.130435-2.226087-2.226087-2.226087-4.452174-4.452174-6.678261-2.226087-4.452174-4.452174-6.678261-6.678261-11.130435-2.226087-2.226087-2.226087-4.452174-4.452174-6.678261-4.452174-6.678261-8.904348-13.356522-11.130435-20.034783-2.226087-2.226087-2.226087-6.678261-4.452174-8.904348-2.226087-2.226087-2.226087-6.678261-4.452174-8.904348-2.226087-4.452174-2.226087-6.678261-4.452174-11.130435C66.782609 636.66087 66.782609 634.434783 64.556522 629.982609c-2.226087-4.452174-2.226087-6.678261-4.452174-11.130435 0-2.226087-2.226087-6.678261-2.226087-8.904348-2.226087-4.452174-2.226087-8.904348-2.226087-13.356522 0-2.226087-2.226087-6.678261-2.226087-8.904348 0-4.452174-2.226087-8.904348-2.226087-13.356522 0-2.226087 0-6.678261-2.226087-8.904348 0-4.452174-2.226087-11.130435-2.226087-15.582609 0-2.226087 0-4.452174 0-6.678261 0-6.678261 0-15.582609 0-22.26087 0-198.121739 180.313043-358.4 400.695652-358.4 222.608696 0 400.695652 160.278261 400.695652 358.4C848.13913 716.8 667.826087 877.078261 447.443478 877.078261z\" p-id=\"5570\"></path>\r\n        <path d=\"M901.565217 687.86087c77.913043-73.46087 124.66087-171.408696 124.66087-280.486957 0-222.608696-200.347826-402.921739-447.443478-402.921739-104.626087 0-200.347826 33.391304-276.034783 86.817391 42.295652-11.130435 89.043478-17.808696 135.791304-17.808696 44.521739-13.356522 91.269565-22.26087 140.243478-22.26087 222.608696 0 400.695652 160.278261 400.695652 358.4 0 62.330435-17.808696 122.434783-48.973913 173.634783C926.052174 616.626087 917.147826 654.469565 901.565217 687.86087z\" p-id=\"5571\"></path>\r\n    </svg>\r\n);\r\n\r\nconst DotSVG = () => (\r\n    <svg t=\"1625668626336\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"28288\" width=\"15\" height=\"15\">\r\n        <path d=\"M512 512m-448 0a7 7 0 1 0 896 0 7 7 0 1 0-896 0Z\" p-id=\"28289\" fill=\"#1296db\"></path>\r\n    </svg>\r\n);\r\n\r\nconst DotBlueSVG = () => (\r\n    <svg t=\"1625670727909\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"28600\" width=\"70\" height=\"70\"><path d=\"M754.1 286.1m-109.4 0a109.4 109.4 0 1 0 218.8 0 109.4 109.4 0 1 0-218.8 0Z\" fill=\"#1296db\" p-id=\"28601\"></path><path d=\"M512.3 186.5m-93.7 0a93.7 93.7 0 1 0 187.4 0 93.7 93.7 0 1 0-187.4 0Z\" fill=\"#1296db\" p-id=\"28602\"></path><path d=\"M269.6 286.1m-78 0a78 78 0 1 0 156 0 78 78 0 1 0-156 0Z\" fill=\"#1296db\" p-id=\"28603\"></path><path d=\"M170.5 527.6m-61.5 0a61.5 61.5 0 1 0 123 0 61.5 61.5 0 1 0-123 0Z\" fill=\"#1296db\" p-id=\"28604\"></path><path d=\"M270.1 770.1m-61.5 0a61.5 61.5 0 1 0 123 0 61.5 61.5 0 1 0-123 0Z\" fill=\"#1296db\" p-id=\"28605\"></path><path d=\"M511.8 869.7m-61.5 0a61.5 61.5 0 1 0 123 0 61.5 61.5 0 1 0-123 0Z\" fill=\"#1296db\" p-id=\"28606\"></path><path d=\"M754.1 770.1m-61.5 0a61.5 61.5 0 1 0 123 0 61.5 61.5 0 1 0-123 0Z\" fill=\"#1296db\" p-id=\"28607\"></path><path d=\"M854.1 528.1m-61.5 0a61.5 61.5 0 1 0 123 0 61.5 61.5 0 1 0-123 0Z\" fill=\"#1296db\" p-id=\"28608\"></path></svg>\r\n);\r\n\r\nconst OnlineSVG = () => (\r\n    <svg t=\"1625676458960\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"6895\" width=\"16\" height=\"16\"><path d=\"M513.12 65.312c-247.552 0-448.224 200.672-448.224 448.192s200.672 448.192 448.224 448.192 448.224-200.672 448.224-448.224S760.672 65.28 513.12 65.28z m0 837.344c-214.912 0-389.12-174.208-389.12-389.12s174.208-389.12 389.12-389.12 389.12 174.208 389.12 389.12-174.208 389.12-389.12 389.12zM168.544 513.536c0 190.304 154.272 344.608 344.608 344.608s344.608-154.272 344.608-344.608c0-190.304-154.272-344.608-344.608-344.608S168.544 323.2 168.544 513.536z\" p-id=\"6896\" fill=\"#5ad539\"></path></svg>\r\n);\r\n\r\nconst OfflineSVG = () => (\r\n    <svg t=\"1625677571208\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"10142\" width=\"16\" height=\"16\"><path d=\"M284.444444 341.333333c0-65.422222 17.066667-128 45.511112-182.044444C209.066667 224.711111 126.577778 351.288889 126.577778 497.777778c0 211.911111 172.088889 384 384 384 146.488889 0 273.066667-82.488889 338.488889-201.955556-54.044444 28.444444-115.2 45.511111-182.044445 45.511111C456.533333 725.333333 284.444444 553.244444 284.444444 341.333333z m378.311112-184.888889h36.977777l-46.933333 46.933334c-4.266667 4.266667-5.688889 9.955556-2.844444 15.644444 2.844444 5.688889 7.111111 8.533333 12.8 8.533334h71.111111c8.533333 0 14.222222-5.688889 14.222222-14.222223s-5.688889-14.222222-14.222222-14.222222H696.888889l46.933333-46.933333c4.266667-4.266667 5.688889-9.955556 2.844445-15.644445-2.844444-5.688889-7.111111-8.533333-12.8-8.533333h-71.111111c-8.533333 0-14.222222 5.688889-14.222223 14.222222s7.111111 14.222222 14.222223 14.222222z m234.666666 265.955556h-93.866666l103.822222-103.822222c4.266667-4.266667 5.688889-9.955556 2.844444-15.644445-2.844444-5.688889-7.111111-8.533333-12.8-8.533333h-128c-8.533333 0-14.222222 5.688889-14.222222 14.222222s5.688889 14.222222 14.222222 14.222222h93.866667L759.466667 426.666667c-4.266667 4.266667-5.688889 9.955556-2.844445 15.644444 2.844444 5.688889 7.111111 8.533333 12.8 8.533333h128c8.533333 0 14.222222-5.688889 14.222222-14.222222s-7.111111-14.222222-14.222222-14.222222z\" p-id=\"10143\" fill=\"#1296db\"></path><path d=\"M536.177778 401.066667h51.2L526.222222 462.222222c-4.266667 4.266667-5.688889 9.955556-2.844444 15.644445 2.844444 5.688889 7.111111 8.533333 12.8 8.533333h85.333333c8.533333 0 14.222222-5.688889 14.222222-14.222222s-5.688889-14.222222-14.222222-14.222222h-51.2l61.155556-61.155556c4.266667-4.266667 5.688889-9.955556 2.844444-15.644444-2.844444-5.688889-7.111111-8.533333-12.8-8.533334h-85.333333c-8.533333 0-14.222222 5.688889-14.222222 14.222222s7.111111 14.222222 14.222222 14.222223z\" p-id=\"10144\" fill=\"#1296db\"></path></svg>\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n    HeartSvg,\r\n    DotSVG,\r\n    DotBlueSVG,\r\n    OnlineSVG,\r\n    OfflineSVG\r\n}\r\n","import Icon from '@ant-design/icons';\r\nimport {Button, Collapse, Typography} from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport React, {useContext, useEffect, useState} from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport styled from 'styled-components';\r\nimport {AppContext} from '../../context/AppProvider';\r\nimport {AuthContext} from '../../context/AuthProvider';\r\nimport {db} from '../../firebase/Config';\r\nimport {HeartSvg} from './IconsSVG';\r\n\r\nconst {Panel} = Collapse\r\n\r\nconst PanelStyled = styled(Panel)`\r\n  \r\n\r\n\r\n  &&& {\r\n    .ant-collapse-header\r\n    ,\r\n    p {\r\n      color: blue;\r\n      font-weight: 500;\r\n      user-select: none;\r\n    }\r\n\r\n    .ant-collapse-content-box {\r\n      padding: 0 10px;\r\n      max-height: 290px;\r\n      overflow-y: auto;\r\n    }\r\n    .ant-typography:hover {\r\n      textShadow: rgb(222 222 222) 0px 0px 7px;\r\n      background-color: #f1f1f1;\r\n      transition: color 0.2s;\r\n    }\r\n\r\n    .ant-typography{\r\n      color: #000;\r\n      font-weight: 400;\r\n      display: flex;\r\n      align-items: center;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .add-room {\r\n      color: #456;\r\n      margin: 15px 0 10px 90px;\r\n      padding: 3px 8px 5px 8px;      \r\n      border: 1px solid #aaa;\r\n    }\r\n\r\n    .add-room:hover{\r\n      color: #fff;\r\n      background-color: #ccc;\r\n      border: 1px solid #bbb;\r\n      box-shadow: 1px 1px 8px 0px #bbb;\r\n    }\r\n\r\n    .tb{\r\n        float: right;\r\n        color: blue;\r\n        font-weight: 500;\r\n        position: absolute;\r\n        right: 5%;\r\n    }\r\n\r\n    .tenphong{\r\n        text-overflow: ellipsis;\r\n        max-width: 200px;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n    }\r\n\r\n \r\n  }\r\n`;\r\n\r\nconst LinkStyled = styled(Typography.Link)`\r\n  display: block;\r\n  margin-bottom: -1px;\r\n  color: #ddd; \r\n  padding: 7px 10px 9px 10px;\r\n  border-radius: 5px;\r\n  \r\n`;\r\n\r\nconst CollapseStyled = styled(Collapse)`\r\n    border-bottom: 1px solid #ccc;\r\n    box-shadow: 0px 9px 7px -9px #ccc;\r\n\r\n`;\r\n\r\n\r\nfunction RoomLists() {\r\n    const {rooms, setIsAddRoomVisible, setSelectedRoomId, selectedRoomId} = useContext(AppContext);\r\n    const {user: {\r\n            uid\r\n        }} = useContext(AuthContext);\r\n\r\n\r\n    const [roomLists, setRoomsLists] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const abc = db.collection('notifys').doc(uid).onSnapshot((snap) => {\r\n            const cde = snap.data()?.roomId;\r\n            setRoomsLists(cde);\r\n            return abc;\r\n        })\r\n\r\n        return abc;\r\n    }, [rooms, uid])\r\n\r\n    return (\r\n\r\n        <CollapseStyled defaultActiveKey=\"0\" ghost>\r\n            <PanelStyled header=\"Nhóm của bạn\" key=\"1\">\r\n                {\r\n                rooms.length !== 0 ? <>{\r\n                    rooms.map((room) => (\r\n                        <LinkStyled key={\r\n                                room.id\r\n                            }\r\n                            onClick={\r\n                                () => setSelectedRoomId(room.id)\r\n                            }\r\n                            style={\r\n                                room.id === selectedRoomId ? {\r\n                                    textShadow: 'rgb(222 222 222) 0px 0px 7px',\r\n                                    backgroundColor: '#f1f1f1',\r\n                                    transition: 'all 0.2s',\r\n                                    color: '#000',\r\n                                    // fontWeight: '500'\r\n                                } : {}\r\n                        }>\r\n\r\n                            {\r\n                            < Icon style = {{ margin: '5px 15px 0 0' }}\r\n                            size = {\r\n                                20\r\n                            }\r\n                            component = {\r\n                                HeartSvg\r\n                            } />\r\n                        }\r\n                            <div className=\"tenphong\">\r\n                                {\r\n                                room.name\r\n                            }</div>\r\n\r\n                            {\r\n                            roomLists?.includes(room.id) ? <Avatar className=\"tb\"\r\n                                style={\r\n                                    {\r\n                                        color: 'white',\r\n                                        backgroundColor: 'blue'\r\n                                    }\r\n                                }\r\n                                src=\"\"\r\n                                size={20}>\r\n                                {\r\n                                roomLists.filter((u) => u === room.id).length < 10 ? '0'+roomLists.filter((u) => u === room.id).length\r\n                                : roomLists.filter((u) => u === room.id).length\r\n                            }</Avatar> : <></>\r\n                        }\r\n\r\n                            </LinkStyled>\r\n                    ))\r\n                }</> : <p style={\r\n                    {\r\n                        color: 'gray',\r\n                        margin: '10px 0px 7px 30px'\r\n                    }\r\n                }>Bạn chưa tham gia nhóm nào</p>\r\n            }\r\n                <Button type='text' className='add-room'\r\n                    onClick={\r\n                        () => setIsAddRoomVisible(true)\r\n                }>\r\n                    Tạo nhóm\r\n                </Button>\r\n                <ReactAudioPlayer src=\"mess.mp3\" className=\"audio\"/>\r\n\r\n            </PanelStyled>\r\n        </CollapseStyled>\r\n    );\r\n}\r\n\r\nexport default RoomLists;\r\n","import { PoweroffOutlined } from '@ant-design/icons';\r\nimport { Avatar, Button, Tooltip, Typography } from 'antd';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport firebase, { auth } from '../../firebase/Config';\r\n\r\n\r\nconst UserInfoStyled = styled.div` \r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\npadding: 12px 16px;\r\nborder-bottom: 1px solid #ccc;\r\nbox-shadow: -4px -1px 9px 1px #ccc;\r\n\r\n.username {\r\n  margin-left: 10px;\r\n  font-size: 16pt;\r\n  font-weight: 700;\r\n}\r\n\r\n.logout:hover{\r\n    color: red;\r\n    border-radius: 50%;\r\n}\r\n\r\n.logout{\r\n    border-radius: 50%;\r\n}\r\n`;\r\n\r\n\r\nfunction UserInfo() {\r\n\r\n    const {\r\n        user: {\r\n            displayName,\r\n            photoURL,\r\n            uid\r\n        }\r\n    } = useContext(AuthContext);\r\n    const { clearState } = useContext(AppContext);\r\n\r\n    if (uid !== undefined) {\r\n        var userRef = firebase.firestore().doc('/users/' + uid);\r\n    }\r\n    var isOfflineForFirestore = {\r\n        status: 'c',\r\n        last_changed: firebase.firestore.FieldValue.serverTimestamp()\r\n    };\r\n\r\n    return (\r\n        <UserInfoStyled>\r\n            <div>\r\n                <Tooltip placement=\"right\"\r\n                    title={displayName}>\r\n                    <Avatar size='large'\r\n                        src={photoURL}>\r\n                        {\r\n                            photoURL ? '' : displayName?.charAt(0)\r\n                        }</Avatar>\r\n                </Tooltip>\r\n\r\n                <Typography.Text className=\"username\">Chat</Typography.Text>\r\n            </div>\r\n            <Tooltip title=\"Đăng xuất\" placement=\"top\">\r\n                <Button className=\"logout\"\r\n                    icon={<PoweroffOutlined />}\r\n                    style={\r\n                        { border: 'none' }\r\n                    }\r\n                    onClick={\r\n                        () => {\r\n                            auth.signOut();\r\n                            userRef.update(isOfflineForFirestore);\r\n                            clearState();\r\n                        }\r\n                    }></Button>\r\n            </Tooltip>\r\n        </UserInfoStyled>\r\n    );\r\n}\r\n\r\nexport default UserInfo;\r\n","import Icon from '@ant-design/icons';\r\nimport { Avatar, Collapse, Tooltip, Typography } from 'antd';\r\nimport { formatDistance } from 'date-fns';\r\nimport { vi } from 'date-fns/locale';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AuthContext } from '../../context/AuthProvider';\r\nimport UseFirestore from '../../hooks/UseFirestore';\r\nimport { OfflineSVG, OnlineSVG } from './IconsSVG';\r\n\r\nconst { Panel } = Collapse\r\n\r\nconst PanelStyled = styled(Panel)`\r\n  \r\n  &&& {\r\n    .ant-collapse-header{\r\n        color: blue;\r\n        font-weight: 500;\r\n        user-select: none;\r\n    }\r\n    p {\r\n      font-weight: 500;\r\n      color: gray\r\n      \r\n    }\r\n\r\n    .ant-collapse-content-box {\r\n      padding: 0 30px;\r\n      max-height: 290px;\r\n      overflow-y: auto;\r\n    }\r\n\r\n    .add-room {\r\n      color: #123;\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkStyled = styled(Typography.Link)`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: blue;\r\n  \r\n`;\r\n\r\nconst DivStyled = styled.div`\r\n    display: flex;\r\n    margin: 15px 10px 10px 0px;\r\n    position: relative;\r\n    .user{\r\n        color: #123;\r\n        margin-left: 10px;\r\n    }\r\n    .status{\r\n      color: blue;\r\n      position: absolute;\r\n      right: 8%;\r\n    }\r\n\r\n    .tb{\r\n        position:absolute;\r\n        top: 2px;\r\n        left: 105%;\r\n    }\r\n    .tb2{\r\n        float: right;\r\n        position: absolute;\r\n        right: -10%;\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nconst CollapseStyled = styled(Collapse)`\r\nborder-bottom: 1px solid #ccc;\r\nbox-shadow: 0px 9px 7px -9px #ccc;\r\n\r\n`;\r\n\r\nfunction UserLists() {\r\n\r\n    const { user: {\r\n        uid\r\n    } } = useContext(AuthContext);\r\n\r\n    const users = UseFirestore('users', '');\r\n\r\n    function formatDate(seconds) {\r\n        let formattedDate = '';\r\n        if (seconds) {\r\n            formattedDate = formatDistance(new Date(seconds * 1000), new Date(), {\r\n                addSuffix: true,\r\n                locale: vi\r\n            });\r\n            formattedDate = formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n            formattedDate = formattedDate.replace('minutes', 'phút');\r\n            formattedDate = formattedDate.replace('hours', 'giờ');\r\n            formattedDate = formattedDate.replace('ago', 'trước');\r\n            formattedDate = formattedDate.replace('trước', '');\r\n            formattedDate = formattedDate.replace('day', 'ngày');\r\n            formattedDate = formattedDate.replace('hour', 'giờ');\r\n            formattedDate = formattedDate.replace('Khoảng', '');\r\n            formattedDate = formattedDate.replace('Dưới', '');\r\n        }\r\n        return formattedDate;\r\n    }\r\n\r\n    return (\r\n        <CollapseStyled defaultActiveKey=\"1\" ghost>\r\n            <PanelStyled header=\"Danh sách bạn bè\" key=\"1\">\r\n                {\r\n                    Array.from(users).filter(user => user.uid !== uid).map((user) => {\r\n\r\n                        return (\r\n                            <DivStyled key={\r\n                                user.uid\r\n                            }>\r\n\r\n                                <Avatar size=\"small\"\r\n                                    src={\r\n                                        user.photoUrl\r\n                                    }>\r\n                                    {\r\n                                        user.photoUrl ? '' : user.displayName.charAt(0)\r\n                                    }</Avatar>\r\n                                <LinkStyled className=\"user\">\r\n                                    {\r\n                                        user.displayName\r\n                                    }</LinkStyled>\r\n\r\n                                {\r\n                                    user.status === 'a' ? <Tooltip title=\"Online\" placement=\"right\"><Icon className=\"tb\"\r\n                                        component={OnlineSVG} /></Tooltip> : <></>\r\n                                }\r\n\r\n                                {\r\n                                    user.status === 'c' ? <Tooltip placement=\"right\"\r\n                                        title={\r\n                                            'Hoạt động ' + formatDate(user.last_changed.seconds) + ' trước'\r\n                                        }>\r\n\r\n                                        <p className=\"tb2\">\r\n                                            {\r\n                                                formatDate(user.last_changed.seconds)\r\n                                            }</p>\r\n                                    </Tooltip> : <></>\r\n                                }\r\n                                {\r\n                                    user.status === 'b' ? <Tooltip title=\"Sleep\" placement=\"right\"><Icon className=\"tb\"\r\n                                        component={OfflineSVG} /></Tooltip> : <></>\r\n                                } </DivStyled>\r\n                        )\r\n                    })\r\n                } </PanelStyled>\r\n        </CollapseStyled>\r\n    );\r\n}\r\n\r\nexport default UserLists;\r\n","import { Col, Row } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport RoomLists from './RoomLists';\r\nimport UserInfo from './UserInfo';\r\nimport UserLists from \"./UserLists\";\r\n\r\nconst SidebarStyled = styled.div`\r\n  background: #fff;\r\n  color: black;\r\n  height: 100vh;\r\n  border-right: 1px solid #ccc;\r\n  magrin: 20px\r\n`;\r\n\r\n\r\nfunction SideBar() {\r\n    return (\r\n        <SidebarStyled>\r\n            <Row>\r\n                <Col span=\"24\">\r\n                    <UserInfo />\r\n                    <RoomLists />\r\n                    <UserLists />\r\n                </Col>\r\n            </Row>\r\n        </SidebarStyled>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","import {Col, Row} from 'antd';\r\nimport React from 'react';\r\nimport ChatWindow from './ChatWindow';\r\nimport SideBar from './SideBar';\r\n\r\nfunction ChatRoom() {\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col span=\"5\">\r\n                    <SideBar/>\r\n                </Col>\r\n                <Col span=\"19\">\r\n                    <ChatWindow/>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatRoom;\r\n","import { FacebookFilled, GoogleOutlined } from '@ant-design/icons';\r\nimport firebase from '@firebase/app';\r\nimport { Button, Col, Row, Typography } from 'antd';\r\nimport React from 'react';\r\nimport { auth } from '../../firebase/Config';\r\nimport { generateKeywords, setDocuments } from '../../firebase/Service';\r\nconst { Title } = Typography\r\n\r\n\r\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\r\nconst ggProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nfunction Login() {\r\n    const handleLoginGoogle = async () => {\r\n        if (Notification.permission === \"granted\") {\r\n            const { additionalUserInfo, user } = await auth.signInWithPopup(ggProvider);\r\n            if (additionalUserInfo.isNewUser) {\r\n                setDocuments('users', {\r\n                    displayName: user.displayName,\r\n                    email: user.email,\r\n                    photoUrl: user.photoURL,\r\n                    uid: user.uid,\r\n                    providerId: additionalUserInfo.providerId,\r\n                    keywords: generateKeywords(user.displayName?.toLowerCase()),\r\n                    roomId: [],\r\n                    status: '',\r\n                    last_changed: '',\r\n                })\r\n                setDocuments('notifys',{\r\n                    roomId: [],\r\n                    uid: user.uid\r\n                });\r\n\r\n            }\r\n        } else {\r\n            alert(\"Vui lòng cho phép thông báo\");\r\n            Notification.requestPermission();\r\n        }\r\n\r\n    }\r\n    \r\n    const handleLoginFacebook = () => {\r\n        auth.signInWithPopup(fbProvider);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Row justify='center'\r\n                style={\r\n                    { height: 800 }\r\n                }>\r\n                <Col span={10}>\r\n                    <Title style={\r\n                        {\r\n                            textAlign: 'center',\r\n                            margin: '30px'\r\n                        }\r\n                    }\r\n                        level={2}>\r\n                        Đăng nhập để tham gia với chúng tôi\r\n                    </Title>\r\n                    <Button icon={<GoogleOutlined />}\r\n                        style={\r\n                            {\r\n                                width: '100%',\r\n                                fontSize: '16px',\r\n                                color: 'red',\r\n                                height: '40px'\r\n\r\n                            }\r\n                        }\r\n                        onClick={\r\n                            () => handleLoginGoogle()\r\n                        }>\r\n                        Đăng nhập bằng Google\r\n                    </Button>\r\n                    <Button icon={<FacebookFilled />}\r\n                        style={\r\n                            {\r\n                                marginTop: '5px',\r\n                                width: '100%',\r\n                                fontSize: '16px',\r\n                                color: 'blue',\r\n                                height: '40px'\r\n                            }\r\n                        }\r\n                        onClick={handleLoginFacebook}>\r\n                        Đăng nhập bằng Facebook (beta)\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import { Input, message } from 'antd';\r\nimport Form, { useForm } from 'antd/lib/form/Form';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport React, { useContext } from 'react';\r\nimport { AppContext } from '../context/AppProvider';\r\nimport { AuthContext } from '../context/AuthProvider';\r\nimport { addDocuments } from '../firebase/Service';\r\n\r\nexport default function AddRoom() {\r\n    const [form] = useForm();\r\n    const { isAddRoomVisible, setIsAddRoomVisible } = useContext(AppContext);\r\n    const { user: {\r\n        uid\r\n    } } = useContext(AuthContext);\r\n\r\n    const handleOk = () => {\r\n        if (form.getFieldValue()?.name && form.getFieldValue()?.description) {\r\n            addDocuments('rooms', {\r\n                ...form.getFieldsValue(),\r\n                members: [uid]\r\n            });\r\n            form.resetFields();\r\n            setIsAddRoomVisible(false);\r\n\r\n\r\n        } else {\r\n            message.info('Bạn cần nhập đầy đủ thông tin');\r\n        }\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsAddRoomVisible(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal title='Tạo nhóm'\r\n                visible={isAddRoomVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}>\r\n                <Form layout=\"vertical\"\r\n                    form={form}>\r\n                    <FormItem label=\"Tên nhóm\" name=\"name\">\r\n                        <Input autoFocus=\"true\" name=\"name\" placeholder=\"Nhập tên nhóm\" autoComplete=\"off\"\r\n                            rules={\r\n                                [{\r\n                                    required: true\r\n                                }]\r\n                            }></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"Mô tả\" name=\"description\">\r\n                        <Input name=\"description\" placeholder=\"Nhập mô tả\" autoComplete=\"off\"\r\n                            rules={\r\n                                [{\r\n                                    required: true\r\n                                }]\r\n                            }></Input>\r\n                    </FormItem>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import { Input, message } from 'antd';\r\nimport Form, { useForm } from 'antd/lib/form/Form';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport React, { useContext } from 'react';\r\nimport { AppContext } from '../context/AppProvider';\r\nimport { db } from '../firebase/Config';\r\n\r\nexport default function EditRoom() {\r\n    const [form] = useForm();\r\n    const { isEditRoomVisible, setIsEditRoomVisible, selectedRoom,selectedRoomId } = useContext(AppContext);\r\n\r\n    form.setFieldsValue({name: selectedRoom.name, description: selectedRoom.description})\r\n\r\n    const handleOk = () => {\r\n        if (form.getFieldValue()?.name && form.getFieldValue()?.description) {\r\n            db.collection('rooms').doc(selectedRoomId).update({\r\n                name: form.getFieldValue('name'),\r\n                description: form.getFieldValue('description')\r\n            })\r\n            form.resetFields();\r\n            setIsEditRoomVisible(false);\r\n            \r\n\r\n        } else {\r\n            message.info('Bạn cần nhập đầy đủ thông tin');\r\n        }\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsEditRoomVisible(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal title='Sửa thông tin nhóm'\r\n                visible={isEditRoomVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                okText=\"Lưu lại\"\r\n                >\r\n                \r\n                <Form layout=\"vertical\"\r\n                    form={form}>\r\n                    <FormItem label=\"Tên nhóm\" name=\"name\">\r\n                        <Input autoFocus=\"true\" name=\"name\" placeholder=\"Nhập tên nhóm\" autoComplete=\"off\"\r\n                            rules={[{ required: true, message: 'Please input your Username!' }]}\r\n                            ></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"Mô tả\" name=\"description\">\r\n                        <Input name=\"description\" placeholder=\"Nhập mô tả\" autoComplete=\"off\"\r\n                            rules={\r\n                                [{\r\n                                    required: true\r\n                                }]\r\n                            }></Input>\r\n                    </FormItem>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import { Form, message, Select, Spin } from 'antd'\r\nimport Avatar from 'antd/lib/avatar/avatar'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport debounce from 'lodash.debounce'\r\nimport React, { useContext, useState } from 'react'\r\nimport { AppContext } from '../context/AppProvider'\r\nimport { db } from '../firebase/Config'\r\n\r\nfunction DebounceSelect({\r\n    fetchOptions,\r\n    debounceTimeout = 300,\r\n    curMembers,\r\n    ...props\r\n}) { // Search: abcddassdfasdf\r\n\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const debounceFetcher = React.useMemo(() => {\r\n        const loadOptions = (value) => {\r\n            setOptions([]);\r\n            setFetching(true);\r\n\r\n            fetchOptions(value, curMembers).then((newOptions) => {\r\n                setOptions(newOptions);\r\n                //console.log(options);\r\n                setFetching(false);\r\n            });\r\n        };\r\n\r\n        return debounce(loadOptions, debounceTimeout);\r\n    }, [debounceTimeout, fetchOptions, curMembers]);\r\n\r\n    React.useEffect(() => {\r\n        return () => { // clear when unmount\r\n            setOptions([]);\r\n        };\r\n    }, []);\r\n    return (<Select labelInValue\r\n        filterOption={false}\r\n        onSearch={debounceFetcher}\r\n        notFoundContent={\r\n            fetching ? <Spin size='small' /> : <p style={{ marginTop: '10px', color: '#345' }}>Nhập * để hiển thị tất cả ... </p>\r\n        }\r\n        {...props}> {\r\n            options.map((opt) => (<Select.Option key={\r\n                opt.value\r\n            }\r\n                value={\r\n                    opt.value\r\n                }\r\n                title={\r\n                    opt.label\r\n                }>\r\n                <Avatar size='small'\r\n                    src={\r\n                        opt.photoUrl\r\n                    }> {\r\n                        opt.photoUrl ? '' : opt.label?.charAt(0)?.toUpperCase()\r\n                    } </Avatar>\r\n                {\r\n                    ` ${opt.label\r\n                    }`\r\n                } </Select.Option>))\r\n        } </Select>);\r\n}\r\n\r\nasync function fetchUserList(search, curMembers) {\r\n    return db.collection('users').where('keywords', 'array-contains', search?.toLowerCase()).orderBy('displayName').limit(20).get().then((snapshot) => {\r\n        console.log(snapshot.docs);\r\n        return snapshot.docs.map((doc) => ({ label: doc.data().displayName, value: doc.data().uid, photoUrl: doc.data().photoUrl })).filter((opt) => !curMembers.includes(opt.value));\r\n    });\r\n}\r\n\r\nexport default function InviteMemberModal() {\r\n    const { isInviteMemberVisible, setIsInviteMemberVisible, selectedRoomId, selectedRoom } = useContext(AppContext);\r\n    const [value, setValue] = useState([]);\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const handleOk = () => {\r\n        form.resetFields();\r\n        setValue([]);\r\n\r\n        const roomRef = db.collection('rooms').doc(selectedRoomId);\r\n\r\n        roomRef.update({\r\n            members: [\r\n                ...selectedRoom.members,\r\n                ...value.map((val) => val.value)\r\n            ]\r\n        });\r\n        const len = value.length;\r\n        if (len !== 0) {\r\n            message.success('Đã thêm ' + len + ' thành viên');\r\n        }\r\n        setIsInviteMemberVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        form.resetFields();\r\n        setValue([]);\r\n        setIsInviteMemberVisible(false);\r\n    };\r\n\r\n    return (<div>\r\n        <Modal title='Mời thêm bạn bè'\r\n            visible={isInviteMemberVisible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            destroyOnClose={true}>\r\n            <Form form={form}\r\n                layout='vertical'>\r\n                <p>Nhập họ tên</p>\r\n                <DebounceSelect mode='multiple' name='search-user' label='Tên các thành viên'\r\n                    \r\n                    value={value}\r\n                    placeholder='Aa ...'\r\n                    fetchOptions={fetchUserList}\r\n                    onChange={\r\n                        (newValue) => setValue(newValue)\r\n                    }\r\n                    style={\r\n                        { width: '100%' }\r\n                    }\r\n                    curMembers={\r\n                        selectedRoom.members\r\n                    } />\r\n            </Form>\r\n        </Modal>\r\n    </div>);\r\n}\r\n","import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Button, Typography } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../context/AppProvider';\r\nimport { AuthContext } from '../context/AuthProvider';\r\n\r\nconst LinkStyled = styled(Typography.Text)`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: blue;\r\n`;\r\n\r\nconst DivStyled = styled.div`\r\n    display: flex;\r\n    margin: 15px 10px 10px 0px;\r\n    align-item: center;\r\n    .user{\r\n        color: #123;\r\n        margin: 7px 15px 9px 15px;\r\n        font-weight: 500;\r\n    }\r\n    .status{\r\n      color: #123;\r\n      position: absolute;\r\n      right: 8%;\r\n    }\r\n    p{\r\n        margin-top:6px;\r\n    }\r\n\r\n    .baChamIcon{\r\n        font-size:'15pt';\r\n        margin-top:'3px';\r\n    }\r\n`;\r\n\r\nexport default function ListMember() {\r\n\r\n    const { members, setIsShowMembersVisible, isShowMembersVisible } = useContext(AppContext);\r\n    const { user: {\r\n        uid\r\n    } } = useContext(AuthContext);\r\n    const handleOk = () => {\r\n        setIsShowMembersVisible(false);\r\n    }\r\n\r\n    return (\r\n        <Modal title={\r\n            \"Danh sách thành viên (\" + Array.from(members).length + \")\"\r\n        }\r\n            visible={isShowMembersVisible}\r\n            onCancel={handleOk}\r\n            onOk={handleOk}\r\n            okButtonProps={{style: {display: 'none'}}}\r\n            >\r\n            {\r\n                Array.from(members).map((user) => (\r\n                    <DivStyled key={\r\n                        user.uid\r\n                    }>\r\n                        <Avatar size=\"large\"\r\n                            src={\r\n                                user.photoUrl\r\n                            }>\r\n                            {\r\n                                user.photoUrl ? '' : user.displayName.charAt(0)\r\n                            }</Avatar>\r\n                        <LinkStyled className=\"user\">\r\n                            {\r\n                                uid === user.uid ? 'Bạn' : user.displayName\r\n                            }</LinkStyled>\r\n                        <Button style={\r\n                            {\r\n                                borderRadius: '50%',\r\n                                float: 'right',\r\n                                position: 'absolute',\r\n                                left: '85%',\r\n                                marginTop: '2px'\r\n                            }\r\n                        }\r\n                            icon={\r\n                                <EllipsisOutlined\r\n                                    className=\"baChamIcon\" />\r\n                            }></Button>\r\n                        { } </DivStyled>\r\n                ))\r\n            } </Modal>\r\n    )\r\n}\r\n","import {\n    BrowserRouter,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport './App.css';\nimport ChatRoom from './components/ChatRoom/ChatRoom';\nimport Login from './components/Login/Login';\nimport AppProvider from './context/AppProvider';\nimport AuthProvider from './context/AuthProvider';\nimport AddRoom from './modals/AddRoom';\nimport EditRoom from './modals/EditRoom';\nimport InviteMember from './modals/InviteMember';\nimport ListMember from './modals/ListMember';\nfunction App() {\n    return (\n        <BrowserRouter>\n            <AuthProvider>\n                <AppProvider>\n                    <Switch>\n                        <Route path=\"/login\"><Login/></Route>\n                        <Route path=\"/\"><ChatRoom/></Route>\n                        \n                    </Switch>\n                    <AddRoom/>\n                    <InviteMember/>\n                    <ListMember/>\n                    <EditRoom/>\n                </AppProvider>\n\n            </AuthProvider>\n\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}